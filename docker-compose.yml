services:
  nginx:
    image: nginx:latest
    container_name: ${PROJECT_PREFIX}nginx-container
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./docker/nginx/:/etc/nginx/conf.d/
      - ./docker/logs/nginx/:/var/log/nginx/
      - ./backend/public/:/var/www/backend/public/:cached
    tty: true
    networks:
      - ipr

  php:
    env_file:
      - ./.env.local
      - ./backend/.env.local
    build:
      context: ./docker/php
      args:
        HOST_GID: ${HOST_GID}
        HOST_UID: ${HOST_UID}
        APP_ENV: ${BACKEND_ENV}
        TZ: ${TZ}
    container_name: ${PROJECT_PREFIX}backend-container
    user: "${HOST_UID}:${HOST_GID}"
    environment:
      - TZ=${TZ}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./backend/:/var/www/backend/:cached
    networks:
      - ipr
    tty: true

  website:
    env_file:
      - ./.env.local
    user: "${HOST_UID}:${HOST_GID}"
    container_name: ${PROJECT_PREFIX}website-container
    build:
      context: ./docker/website
      dockerfile: Dockerfile
      args:
        - NODE_ENV
        - HOST_GID
        - HOST_UID
    environment:
      - NODE_ENV=${BACKEND_ENV}
    volumes:
      - ./backend/:/var/www/website/:cached
      - ./docker/logs/node/:/home/node/.npm/
    tty: true

  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: ${PROJECT_PREFIX}database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
     - ./docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - "32768:5432"
    networks:
      - ipr

networks:
  ipr:
    name: ipr
